// Generated by CoffeeScript 1.7.1
(function() {
  var containedPeriodicValues, determineSign, nearestPeriodicValue;

  nearestPeriodicValue = function(point, value, period) {
    return value - period * Math.round((value - point) / period);
  };

  containedPeriodicValues = function(start, end, value, period) {
    var nearest, newEnd;
    if (start === end) {
      return 0;
    }
    if (start > end) {
      newEnd = start;
      start = end;
      end = newEnd;
    }
    end--;
    nearest = nearestPeriodicValue(start, value, period);
    if (nearest - start < 0) {
      nearest += period;
    }
    if (nearest - start > end - start) {
      return 0;
    } else {
      return 1 + parseInt((end - nearest) / period);
    }
  };

  determineSign = function(x) {
    x = +x;
    if (x > 0) {
      return 1;
    } else {
      return -1;
    }
  };

  moment.fn.weekDays = function(start) {
    var containedSaturdays, containedSundays, startDay, totalDays;
    startDay = start.day();
    totalDays = Math.abs(this.diff(start, 'days'));
    containedSundays = containedPeriodicValues(startDay, totalDays + startDay, 0, 7);
    containedSaturdays = containedPeriodicValues(startDay, totalDays + startDay, 6, 7);
    return totalDays - (containedSaturdays + containedSundays);
  };

  moment.fn.weekendDays = function(start) {
    return Math.abs(this.diff(start, 'days')) - this.weekDays(start);
  };

  moment.fn.addWeekDays = function(count) {
    var absIncrement, day, days, paddedAbsIncrement, sign, weekendsInbetween;
    if (count === 0 || isNaN(count)) {
      return this;
    }
    sign = determineSign(count);
    day = this.day();
    absIncrement = Math.abs(count);
    days = 0;
    if (day === 0 && sign === -1) {
      days = 1;
    } else if (day === 6 && sign === 1) {
      days = 1;
    }
    paddedAbsIncrement = absIncrement;
    if (day !== 0 && day !== 6 && sign > 0) {
      paddedAbsIncrement += day;
    } else if (day !== 0 && day !== 6 && sign < 0) {
      paddedAbsIncrement += 6 - day;
    }
    weekendsInbetween = Math.max(Math.floor(paddedAbsIncrement / 5) - 1, 0) + (paddedAbsIncrement > 5 && paddedAbsIncrement % 5 > 0 ? 1 : 0);
    days += absIncrement + weekendsInbetween * 2;
    this.add(sign * days, 'days');
    return this;
  };

  moment.fn.subtractWeekDays = function(count) {
    return this.addWeekDays(-count);
  };

  moment.fn.isWeekDay = function() {
    return this.isoWeekday() < 6;
  };

  moment.fn.isWeekendDay = function() {
    return this.isoWeekday() > 5;
  };

}).call(this);
